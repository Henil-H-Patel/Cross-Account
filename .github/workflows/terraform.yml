name: Terraform CI/CD Pipeline

on:
  push:
    branches:
    - main

jobs:
  deploy:
    name: Terraform Deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [ development, production ]

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.5.0

    - name: Configure AWS Credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
      if: matrix.environment == 'development'

    - name: Configure AWS Credentials
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
      if: matrix.environment == 'production'

    - name: Terraform Init
      run: terraform init -backend-config="key=${{ matrix.environment }}/terraform.tfstate"

    - name: Terraform Plan
      run: terraform plan -var-file=${{ matrix.environment }}.tfvars

    - name: Terraform Apply with Approval
      run: |
        if [ "${{ matrix.environment }}" == "production" ]; then
          terraform apply -var-file=${{ matrix.environment }}.tfvars -auto-approve
        else
          terraform apply -var-file=${{ matrix.environment }}.tfvars
